local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Pet sim 2 script by csri",
   LoadingTitle = "Loading...",
   LoadingSubtitle = "by csri",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("Home", nil) -- Title, Image
local ChooseSection = MainTab:CreateSection("Select a game")

Rayfield:Notify({
   Title = "Successfully executed the script",
   Content = "Notification Content",
   Duration = 3,
   Image = nil,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("OK")
      end
   },
},
})

local AutofarmButton = MainTab:CreateButton({
   Name = "Autofarm",
   Callback = function()
      -- Define a function to generate random 4-character strings
local function generateRandomString()
    local chars = "0123456789"
    local str = ""
    for i = 1, 4 do
        local randomIndex = math.random(1, #chars)
        str = str .. chars:sub(randomIndex, randomIndex)
    end
    return str
end

-- Function to attack objects
local function attackObject(object)
    -- Simulate a click on the object (this may vary depending on the game)
    game:GetService("Players").LocalPlayer:InputBegin(Enum.UserInputType.MouseButton1)
    game:GetService("Players").LocalPlayer:InputEnd(Enum.UserInputType.MouseButton1)
end

-- Main loop to continuously find and attack objects
while true do
    local workspaceObjects = workspace.__THINGS:GetChildren()

    -- Iterate through all objects in workspace.__THINGS
    for _, object in pairs(workspaceObjects) do
        -- Check if the object is a Coin, Chest, or Gift
        if object:FindFirstChild("POS") then
            local objectName = object.Name
            
            -- Check if the object name is a 4-character string
            if #objectName == 4 and tonumber(objectName) then
                -- Attack the object
                attackObject(object)
            end
        end
    end
    
    -- Wait for a short duration before searching again
    wait(0.1)
end

   end,
})
